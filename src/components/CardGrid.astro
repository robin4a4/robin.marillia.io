---
export interface Props {
  itemNumber: number;
}
const { itemNumber } = Astro.props;
---

<carousel-component>
  <ul
    data-slides-container
    transition:persist
    class="max-md:-mx-16 max-md:px-16 max-md:pb-16 max-md:flex max-md:flex-row max-md:overflow-x-auto max-md:flex-no-wrap snap-mandatory snap-x sm:grid sm:grid-cols-2 lg:grid-cols-3 gap-x-24 gap-y-32"
  >
    <slot />
  </ul>
  <div class="flex items-center justify-center gap-8 mt-16 md:hidden">
    {
      [...Array(itemNumber)].map((_, index) => (
        <div
          data-slide-dot={index}
          class="w-[10px] h-[10px] mx-2 bg-slate-200 rounded-full"
        />
      ))
    }
  </div>
</carousel-component>

<script>
  import "https://flackr.github.io/scroll-timeline/dist/scroll-timeline.js";

  class CarouselComponent extends HTMLElement {
    keyframes = [
      {
        scale: 1,
        backgroundColor: "#e2e8f0",
      },
      {
        scale: 1.3,
        backgroundColor: "#f472b6",
      },
      {
        scale: 1,
        backgroundColor: "#e2e8f0",
      },
    ];

    connectedCallback() {
      const slidesContainer = this.querySelector(
        "[data-slides-container]"
      ) as HTMLDivElement;
      const slideDots = this.querySelectorAll(
        "[data-slide-dot]"
      ) as NodeListOf<HTMLDivElement>;
      slideDots.forEach((dot, index) => {
        dot.animate(this.keyframes, {
          fill: "both",
          // @ts-ignore
          timeline: new ViewTimeline({
            subject: slidesContainer.children[index],
            axis: "inline",
          }),
          rangeStart: "cover",
          rangeEnd: "cover",
        });
      });
    }
  }
  customElements.define("carousel-component", CarouselComponent);
</script>
